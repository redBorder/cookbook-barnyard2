<%####################################################################### %>
<%# Copyright (c) 2014 ENEO TecnologÃ­a S.L. %>
<%# This file is part of redBorder. %>
<%# redBorder is free software: you can redistribute it and/or modify %>
<%# it under the terms of the GNU Affero General Public License License as published by %>
<%# the Free Software Foundation, either version 3 of the License, or %>
<%# (at your option) any later version. %>
<%# redBorder is distributed in the hope that it will be useful, %>
<%# but WITHOUT ANY WARRANTY; without even the implied warranty of %>
<%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the %>
<%# GNU Affero General Public License License for more details. %>
<%# You should have received a copy of the GNU Affero General Public License License %>
<%# along with redBorder. If not, see <http://www.gnu.org/licenses/>. %>
<%####################################################################### %>
<% databases_dir = "/usr/share/GeoIP" %>
###############################################################################
# Generated by Chef for <%= node[:hostname] %>
###############################################################################

config utc

# set the appropriate paths to the file(s) your Snort process is using.

config gen_file:            /etc/snort/<%= @group["instances_group"] %>/gen-msg.map
config reference_file:	    /etc/snort/<%= @group["instances_group"] %>/reference.config
config classification_file: /etc/snort/<%= @group["instances_group"] %>/classification.config
config sid_file:            /etc/snort/<%= @group["instances_group"] %>/sid-msg.map

config hostname:  <%= node["rbname"] %>

input unified2

# Kafka
<% if !@sensor_id.nil? and @sensor_id>0 and !node["redborder"]["sensor_uuid"].nil? %>
  <% out = %w[deployment deployment_uuid
            namespace namespace_uuid
            market market_uuid organization
            organization_uuid service_provider
            service_provider_uuid].map { |x| (@group[x].nil? ? "" : "\"#{x}\":\"#{@group[x].to_s.gsub(" ", "\\ ")}\"")}.select{|x| x!="" }.join(",") %>
output alert_json: <%= (!node["redborder"]["cloud"].nil? and
                        Array(node["redborder"]["cloud"]).any? {|v| [true,"true","1",1].include? v }) ?
                         "https://http2k.service/rbdata/#{node["redborder"]["sensor_uuid"]}/rb_event http.max_connections=5 http.max_queued_messages=10000 http.conn_timeout=10000 http.req_timeout=30000 http.insecure=1" :
                         "kafka://kafka.#{ node["redborder"]["cdomain"] }@rb_event rdkafka.socket.max.fails=1"
                      %> default enrich_with={<%= (out == "" or out.nil? ) ? "" : "#{out},"
                        %>"sensor_uuid":"<%= node["redborder"]["sensor_uuid"].to_s.gsub(" ", "\\ ")
                       %>","sensor_name":"<%= node[:hostname].gsub(" ", "\\ ")
                       %>","group_uuid":"<%= (@group["group_uuid"].nil? ? "0" : @group["group_uuid"].to_s.gsub(' ','') )
                       %>","group_name":"<%= @name.nil? ? "default" : @name.to_s.gsub(" ","\\ ").to_s.gsub(',','')
                       %>","sensor_type":"<% "ips"
                       %>","domain_name":"<%= (@group["domain_name"].nil? ?
                                               "0" :
                                               @group["domain_name"].to_s.gsub(" ","\\ ") )
                       %>","sensor_ip":"<%= node.ipaddress %>" <%= "}"
                      %> hosts=<%=     "/etc/objects/hosts"
                      %> networks=<%=  "/etc/objects/networks"
                      %> services=<%=  "/etc/objects/services"
                      %> protocols=<%= "/etc/objects/protocols"
                      %> vlans= <%=    "/etc/objects/vlans"
                      %>
  <% if File.exist? "#{databases_dir}/GeoIP2-Country" %>                  <%# Paid Version %>
                    <%= "geoip=#{databases_dir}/GeoIP2-Country"%>
                    <%= " geoip6=#{databases_dir}/GeoIP2-Country"%>
  <% else %>                                                              <%# Free Version %>
                    <%= ((File.exists?"#{databases_dir}/GeoLiteCountry.dat") ?
                        "geoip=#{databases_dir}/GeoLiteCountry.dat geoip6=#{databases_dir}/GeoLiteCountry.dat" : "") %>
  <% end %>
                    <%= ((File.exists?"#{databases_dir}/GeoIPASNumv6.dat") ?
                        " geoip6_org=#{databases_dir}/GeoIPASNumv6.dat" : "")
                    %><%= ((File.exists?"#{databases_dir}/GeoIPASNum.dat") ?
                        " geoip6_org=#{databases_dir}/GeoIPASNum.dat" : "")
                    %><%= ((File.exists?"/etc/objects/mac_vendors") ?
                        " eth_vendors=/etc/objects/mac_vendors" : "") %>
<% end %>

# Syslog
<% if !node[:redborder].nil? and
      !node[:redborder][:rsyslog].nil? and
      !node[:redborder][:rsyslog][:servers].nil? and
      node[:redborder][:rsyslog][:servers].size>0 -%>
  <% if node["redborder"]["rsyslog"]["mode"]=="basic" %>
output alert_syslog: LOG_DAEMON
  <% else %>
output alert_syslog_full: sensor_name <%= node[:hostname]
                      %>, sensor_group <%= @name.nil? ? "default" :
                                                        @name.to_s.gsub(' ','').to_s.gsub(',','') %>, local
  <% end %>
<% end %>

